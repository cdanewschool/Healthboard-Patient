<?xml version="1.0" encoding="utf-8"?>

<!--

    ADOBE SYSTEMS INCORPORATED
    Copyright 2008 Adobe Systems Incorporated
    All Rights Reserved.

    NOTICE: Adobe permits you to use, modify, and distribute this file
    in accordance with the terms of the license agreement accompanying it.

-->

<!--- The default skin class for a Spark ToggleButton component.  

     @see spark.components.ToggleButton
        
      @langversion 3.0
      @playerversion Flash 10
      @playerversion AIR 1.5
      @productversion Flex 4
-->
<s:SparkSkin xmlns:fx="http://ns.adobe.com/mxml/2009" xmlns:s="library://ns.adobe.com/flex/spark" 
    xmlns:fb="http://ns.adobe.com/flashbuilder/2009" minWidth="21" minHeight="21" alpha.disabledStates="0.5">
    <fx:Metadata>[HostComponent("spark.components.ButtonBarButton")]</fx:Metadata>

    <!-- host component -->
    <fx:Script fb:purpose="styling">
        /* Define the skin elements that should not be colorized. 
           For toggle button, the graphics are colorized but the label is not. */
        static private const exclusions:Array = ["labelDisplay"];

        /**
         * @private
         */    
        override public function get colorizeExclusions():Array {return exclusions;}
        
        /**
         * @private
         */
        override protected function initializationComplete():void
        {
            useChromeColor = true;
            super.initializationComplete();
        }
        
        /**
         * @private
         */
        override protected function updateDisplayList(unscaledWidth:Number, unscaledHeight:Number) : void
        {
            var cr:Number = getStyle("cornerRadius");
            
            if (cornerRadius != cr)
            {
                cornerRadius = cr;
                //shadow.radiusX = cornerRadius;
                //fill.radiusX = cornerRadius;
                //lowlight.radiusX = cornerRadius;
                //highlight.radiusX = cornerRadius;
                //border.radiusX = cornerRadius;
            }
            
            //if (highlightStroke) highlightStroke.radiusX = cornerRadius;
            //if (hldownstroke1) hldownstroke1.radiusX = cornerRadius;
            //if (hldownstroke2) hldownstroke2.radiusX = cornerRadius;
            
            super.updateDisplayList(unscaledWidth, unscaledHeight);
        }
        
        private var cornerRadius:Number = 2;
    </fx:Script>
    
    <!-- states -->
    <s:states>
        <s:State name="up" />
        <s:State name="over" stateGroups="overStates" />
        <s:State name="down" stateGroups="downStates" />
        <s:State name="disabled" stateGroups="disabledStates" />
        <s:State name="upAndSelected" stateGroups="selectedStates, selectedUpStates" />
        <s:State name="overAndSelected" stateGroups="overStates, selectedStates" />
        <s:State name="downAndSelected" stateGroups="downStates, selectedStates" />
        <s:State name="disabledAndSelected" stateGroups="selectedUpStates, disabledStates, selectedStates" />
    </s:states>	
    
	<!-- REPLACED ALL THE DEFAULT STUFF WITH THE FOLLOWING (DAMIAN) -->
	<s:Group left="0" right="0" top="0" bottom="0" scaleGridLeft="15" scaleGridRight="50" scaleGridTop="1" scaleGridBottom="24">
		<s:Path left="0" right="0" top="0" bottom="0">
			<s:data>M 0,0 L 0,30 180,30 170,0 0,0 Z</s:data>
			<s:fill>
				<s:SolidColor color="#4B4B4B" color.over="#4B4B4B" color.down="#4B4B4B" color.selectedStates="#4B4B4B" />
			</s:fill>
		</s:Path>
	</s:Group>
	
    <!-- REMOVED BORDER (DAMIAN) -->
    
    
    <!-- layer 8: text -->
    <!--- @copy spark.components.supportClasses.ButtonBase#labelDisplay -->
    <s:Label id="labelDisplay"
             textAlign="left"
             verticalAlign="middle"
             maxDisplayedLines="1"
             horizontalCenter="0" verticalCenter="1"
             left="10" right="10" top="2" bottom="2">
    </s:Label>
    
</s:SparkSkin>
