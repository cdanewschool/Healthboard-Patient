<?xml version="1.0" encoding="utf-8"?>
<s:TitleWindow xmlns:fx="http://ns.adobe.com/mxml/2009" 
			   xmlns:s="library://ns.adobe.com/flex/spark" 
			   xmlns:mx="library://ns.adobe.com/flex/mx" width="405"
			   close="PopUpManager.removePopUp(this);" skinClass="skins.general.myHeaderlessTitleWindow" color="0x000000">
	<fx:Script>
		<![CDATA[
			import mx.managers.PopUpManager;
			import mx.utils.ObjectProxy;
			
			import spark.components.TextInput;
			
			[Bindable] public var date:String;
			//[Bindable] private var myEntry:Object = new Object();
			[Bindable] private var currentRunWalk:String;
			[Bindable] private var currentRunWalkMiles:String;
			[Bindable] private var currentBike:String;
			[Bindable] private var author:String;
			
			public function populateEntry():void {
				var count:uint = 0;
				for(var i:uint = 0; i < parentApplication.exerciseDataPhysicianAssigned.length; i++) {
					/* if(parentApplication.exerciseDataPhysicianAssigned.getItemAt(i).PRTscore != '') currentRunWalk = parentApplication.exerciseDataPhysicianAssigned.getItemAt(i).runWalk;
					if(parentApplication.exerciseDataPhysicianAssigned.getItemAt(i).mileRun != '') currentRunWalkMiles = parentApplication.exerciseDataPhysicianAssigned.getItemAt(i).runWalkMiles;
					if(parentApplication.exerciseDataPhysicianAssigned.getItemAt(i).min != '') currentBike = parentApplication.exerciseDataPhysicianAssigned.getItemAt(i).bike; */
					
					if(parentApplication.exerciseDataPhysicianAssigned.getItemAt(i).date == date) {
						if(parentApplication.exerciseDataPhysicianAssigned.getItemAt(i).runWalk != '') {
							hbRunWalk.visible = hbRunWalk.includeInLayout = true;
							currentRunWalk = parentApplication.exerciseDataPhysicianAssigned.getItemAt(i).runWalk;
							count++;
							if(count%2) hbRunWalk.setStyle("backgroundColor",0xCECECE);		//if ODD
						}
						
						if(parentApplication.exerciseDataPhysicianAssigned.getItemAt(i).runWalkMiles != '') currentRunWalkMiles = parentApplication.exerciseDataPhysicianAssigned.getItemAt(i).runWalkMiles;
						else lblRunWalkMiles1.visible = lblRunWalkMiles2.visible = false;
						
						if(parentApplication.exerciseDataPhysicianAssigned.getItemAt(i).bike != '') {
							hbBike.visible = hbBike.includeInLayout = true;
							currentBike = parentApplication.exerciseDataPhysicianAssigned.getItemAt(i).bike;
							count++;
							if(count%2) hbBike.setStyle("backgroundColor",0xCECECE);		//if ODD
						}
						
						break;
					}
				}
				this.height = 274 - (2-count)*32;
			}
			
			private function addComment():void {
				var newComment:Object = new Object();
				newComment = ({type:'patient',expectation:'expectation',author:parentApplication.fullname,datePatient:date,comments:txtComments.text, measure:'comments'});
				//var newCommentOP:ObjectProxy = new ObjectProxy(newComment);
				parentApplication.exerciseDataByMeasurePhysicianAssigned[parentApplication.exercisePAIndices.indexOf('Comments')].chart[0].data.push(newComment);
				parentApplication.exerciseDataByMeasurePhysicianAssigned.refresh();
				
				for(var i:uint = 0; i < parentApplication.exerciseDataPhysicianAssigned.length; i++) {
					if(parentApplication.exerciseDataPhysicianAssigned.getItemAt(i).date == date) {
						parentApplication.exerciseDataPhysicianAssigned.getItemAt(i).comments = txtComments.text;
						parentApplication.exerciseDataPhysicianAssigned.refresh();
						break;
					}
				}
				
				PopUpManager.removePopUp(this);
			}
		]]>
	</fx:Script>
	
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	
	<s:layout>
		<s:VerticalLayout paddingTop="13" paddingBottom="13" paddingLeft="5" paddingRight="13" gap="0" />
	</s:layout>

	<s:Label text="Add Comment" fontWeight="bold" fontSize="16" color="0x4D4D4D" paddingLeft="8" paddingBottom="16" />
	
	<s:HGroup paddingLeft="8" paddingBottom="7">
		<s:Label fontSize="13" fontStyle="italic" color="0x4D4D4D" text="{'Entry for ' + date}" />
	</s:HGroup>
	
	<mx:HBox id="hbRunWalk" visible="false" includeInLayout="false" width="391" height="32" verticalAlign="middle" color="0x000000" horizontalGap="3"><!--backgroundColor="0xCECECE" -->
		<s:Label text="The time for run / walk is" paddingLeft="7" />
		<s:Label text="{currentRunWalk + ' minutes'}" fontWeight="bold" />
		<s:Label id="lblRunWalkMiles1" text=", with" paddingLeft="-2" />
		<s:Label id="lblRunWalkMiles2" text="{currentRunWalkMiles + ' miles.'}" fontWeight="bold" />
	</mx:HBox>
	<mx:HBox id="hbBike" visible="false" includeInLayout="false" width="391" height="32" verticalAlign="middle" color="0x000000" horizontalGap="3">
		<s:Label text="The time for bike is" paddingLeft="7" />
		<s:Label text="{currentBike + ' minutes'}" fontWeight="bold" />
	</mx:HBox>

	<s:VGroup paddingLeft="8" paddingTop="23" gap="7">
		<s:Label text="Comments:" />
		<s:TextArea id="txtComments" width="376" heightInLines="2" />
	</s:VGroup>
	
	<s:HGroup paddingTop="12" paddingBottom="13" paddingLeft="8">
		<s:Line xFrom="0" xTo="376">
			<s:stroke>
				<s:SolidColorStroke color="0x4D4D4D" weight="1"/>
			</s:stroke>
		</s:Line>
	</s:HGroup>
	
	<s:HGroup width="100%" horizontalAlign="right" paddingBottom="10">
		<s:Button label="Add Comment" click="addComment()" styleName="orangeButton" fontSize="11" height="24" />
		<s:Button label="Close" click="PopUpManager.removePopUp(this);" styleName="buttonText" height="24" width="55" />
	</s:HGroup>
</s:TitleWindow>